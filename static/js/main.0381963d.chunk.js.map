{"version":3,"sources":["card/CardArray.ts","card/Card.ts","components/Buttons.tsx","components/CardContainer.tsx","components/Counter.tsx","App.tsx","index.tsx"],"names":["card","Card","this","cardArray","sort","Math","random","console","log","useStyles","makeStyles","theme","button","margin","spacing","Buttons","count","cardIndex","setCount","setCardIndex","classes","className","fontSize","onClick","front","document","querySelector","back","setAttribute","classList","remove","setTimeout","add","Button","variant","color","size","window","location","reload","startIcon","CardContainer","cardSet","map","idx","style","zIndex","src","alt","Counter","App","useState","setCardSet","useEffect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0381963d.chunk.js","sourcesContent":["/*\nspade : s\ndiamond : d\nclub : c\nheart : h\nj,q,k,A : jack, queen, king, A spade\njoker : J1,J2\n*/\nconst card = [\n  'J1',\n  'J2',\n  '2S',\n  '3S',\n  '4S',\n  '5S',\n  '6S',\n  '7S',\n  '8S',\n  '9S',\n  '10S',\n  'JS',\n  'QS',\n  'KS',\n  'AS',\n  '2D',\n  '3D',\n  '4D',\n  '5D',\n  '6D',\n  '7D',\n  '8D',\n  '9D',\n  '10D',\n  'JD',\n  'QD',\n  'KD',\n  'AD',\n  '2C',\n  '3C',\n  '4C',\n  '5C',\n  '6C',\n  '7C',\n  '8C',\n  '9C',\n  '10C',\n  'JC',\n  'QC',\n  'KC',\n  'AC',\n  '2H',\n  '3H',\n  '4H',\n  '5H',\n  '6H',\n  '7H',\n  '8H',\n  '9H',\n  '10H',\n  'JH',\n  'QH',\n  'KH',\n  'AH',\n];\n\nexport default card;\n","import cardArray from './CardArray';\n\nexport class Card {\n  card: string[];\n\n  constructor() {\n    this.card = cardArray.sort(() => Math.random() - 0.5);\n    console.log(this.card);\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { makeStyles } from '@material-ui/core';\nimport './Buttons.css';\n\ninterface Props {\n  cardIndex: number;\n  count: number;\n  setCount: (count: number) => void;\n  setCardIndex: (cardIndex: number) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Buttons = ({ count, cardIndex, setCount, setCardIndex }: Props) => {\n  const classes = useStyles();\n  // Go to previous card\n  const prevOnClick = () => {\n    if (cardIndex > 0) {\n      const front: HTMLElement | null = document.querySelector(\n        `.card${cardIndex - 1}.front`\n      );\n      const back: HTMLElement | null = document.querySelector(\n        `.card${cardIndex - 1}.back`\n      );\n      front?.setAttribute('style', `z-index:${-cardIndex + 1}`);\n      back?.setAttribute('style', `z-index:${-cardIndex + 1}`);\n\n      front?.classList.remove('f-slide-right');\n      back?.classList.remove('b-slide-right');\n      setTimeout(() => {\n        front?.classList.remove('f-slide-left');\n        front?.classList.add('f-slide-left');\n        back?.classList.remove('b-slide-left');\n        back?.classList.add('b-slide-left');\n      }, 50);\n      setCount(count - 1);\n      setCardIndex(cardIndex - 1);\n    }\n  };\n  // Go to next card\n  const nextOnClick = () => {\n    if (cardIndex < 53) {\n      const front: HTMLElement | null = document.querySelector(\n        `.card${cardIndex}.front`\n      );\n      const back: HTMLElement | null = document.querySelector(\n        `.card${cardIndex}.back`\n      );\n      front?.setAttribute('style', `z-index:${cardIndex}`);\n      back?.setAttribute('style', `z-index:${cardIndex}`);\n\n      front?.classList.remove('f-slide-left');\n      back?.classList.remove('b-slide-left');\n      setTimeout(() => {\n        front?.classList.remove('f-slide-right');\n        front?.classList.add('f-slide-right');\n        back?.classList.remove('b-slide-right');\n        back?.classList.add('b-slide-right');\n      }, 50);\n      setCount(count + 1);\n      setCardIndex(cardIndex + 1);\n    }\n  };\n\n  // shuffle card by reloading\n  const shuffle = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"button-container\">\n      <ArrowBackIosIcon fontSize=\"large\" onClick={prevOnClick} />\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        onClick={shuffle}\n        startIcon={<AutorenewIcon />}\n      >\n        Shuffle\n      </Button>\n      <ArrowForwardIosIcon fontSize=\"large\" onClick={nextOnClick} />\n    </div>\n  );\n};\n\nexport default Buttons;\n","import CSS from 'csstype';\nimport './CardContainer.css';\n\nconst backImg =\n  'https://i.pinimg.com/564x/91/69/ef/9169ef73b3564976a7dc564d66861027.jpg';\n\ninterface Props {\n  cardSet: string[];\n}\n\nconst CardContainer = ({ cardSet }: Props) => {\n  return (\n    <div className=\"card-container\">\n      {cardSet.map((card, idx) => {\n        const style: CSS.Properties = {\n          zIndex: -idx,\n        };\n        return (\n          <>\n            <img\n              key={`f${idx}`}\n              className={`front card-img card${idx}`}\n              src={`/image/${card}.jpg`}\n              alt=\"card\"\n              style={style}\n            />\n            <img\n              style={style}\n              className={`back card-img card${idx}`}\n              key={`b${idx}`}\n              src={backImg}\n              alt=\"back\"\n            />\n          </>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","interface Props {\n  count: number;\n}\n\nconst Counter = ({ count }: Props) => {\n  return (\n    <div className=\"counter\">\n      <h2>{count}/54</h2>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { Card } from './card/Card';\nimport Buttons from './components/Buttons';\nimport CardContainer from './components/CardContainer';\nimport Counter from './components/Counter';\n\nconst App = () => {\n  const [cardSet, setCardSet] = useState(['J1']);\n  const [cardIndex, setCardIndex] = useState(0);\n  const [count, setCount] = useState(1);\n\n  // Set cardset at the first load\n  useEffect(() => {\n    setCardSet(new Card().card);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <CardContainer cardSet={cardSet} />\n      <Counter count={count} />\n      <Buttons\n        count={count}\n        cardIndex={cardIndex}\n        setCardIndex={setCardIndex}\n        setCount={setCount}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}